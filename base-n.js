class BaseN{static encrypt(t,e,n,l){const r=n.split(""),g=l.split(""),i=BigInt(r.length),f=BigInt(g.length);let h,o=0n,s="",B=[];for(let e=0;e<t.length;e++)o+=i**BigInt(t.length-1-e)*BigInt(r.indexOf(t[e]));for(let t=BigInt(e.length-1);t>=0;t--){const n=r.indexOf(e[Number(t)]);o+=i**t*BigInt(n)**BigInt(3),B.push(n)}for(h=0n;f**h<=o&&f**(h+1n)<o;h++);for(;h>=0;h--)for(let t=0n;t<f;t++){const e=f**h,n=e*t;if(n<=o&&n+e>o){o-=n,s+=g[(Number(t)+B.reduce((t,e)=>t+e))%Number(f)];for(let t=0;t<B.length&&(B[t]+=1,B[t]>=i);t++)B[t]=0}}return s}static decrypt(t,e,n,l){const r=n.split(""),g=l.split(""),i=BigInt(r.length),f=BigInt(g.length);let h,o=0n,s="",B=[];for(let t=BigInt(e.length-1);t>=0;t--){r.indexOf(e[Number(t)]);o-=f**t*BigInt(g.indexOf(e[Number(t)]))**BigInt(3),B.push(g.indexOf(e[Number(t)]))}let I="";for(let e=0;e<t.length;e++){I+=(B.reduce((t,e)=>t+e)+Number(t[e]))%Number(i);for(let t=0;t<B.length&&(B[t]+=1,B[t]>=f);t++)B[t]=0}for(let t=0;t<I.length;t++)o+=i**BigInt(I.length-1-t)*BigInt(r.indexOf(I[t]));for(h=0n;f**h<=o&&f**(h+1n)<=o;h++);for(;h>=0;h--)for(let t=0n;t<f;t++){const e=f**h,n=e*t;n<=o&&n+e>o&&(o-=n,s+=g[Number(t)])}return s}static shuffle(t){let e=[],n="";for(;e.length!==t.length;){const l=Math.floor(Math.random()*t.length);e.includes(l)||(n+=t[l],e.push(l))}return n}static extractCharset(t){let e="";for(let n=0;n<t.length;n++)e.includes(t[n])||(e+=t[n]);return e}}