class BaseN{static encrypt(t,e,n,r){function l(t){return BigInt(t)}const f=n.split(""),o=r.split(""),s=l(f.length),u=l(o.length);let h,c=0n,i="",g=[];for(let e=0;e<t.length;e++)c+=s**l(t.length-1-e)*l(f.indexOf(t[e]));for(let t=l(e.length-1);t>=0;t--){const n=f.indexOf(e[Number(t)]);c+=s**t*l(n),g.push(n)}if(c<0)return"";for(h=0n;u**h<=c&&u**(h+1n)<c;h++);for(;h>=0;h--)for(let t=0n;t<u;t++){const e=u**h,n=e*t;if(n<=c&&n+e>c){c-=n,i+=o[(Number(t)+g.reduce((t,e)=>t+e))%Number(u)];for(let t=0;t<g.length&&(g[t]+=1,g[t]>=s);t++)g[t]=0}}return i}static decrypt(t,e,n,r){function l(t){return BigInt(t)}const f=n.split(""),o=r.split(""),s=l(f.length),u=l(o.length);let h,c=0n,i="",g=[];for(let t=l(e.length-1);t>=0;t--){const n=o.indexOf(e[Number(t)]);c-=u**t*l(n),g.push(n)}for(let e=0;e<t.length;e++){let n=l(g.reduce((t,e)=>t+e)+f.indexOf(t[e]));for(let e=2;e<s;e++)n-=l(f.indexOf(t[e]))*s-l(g.reduce((t,e)=>t+e));for(let t=0;t<g.length&&(g[t]+=1,g[t]>=u);t++)g[t]=0;c+=s**l(t.length-1-e)*(n%s)}if(c<0n)return"";for(h=0n;u**h<=c&&u**(h+1n)<=c;h++);for(;h>=0;h--)for(let t=0n;t<u;t++){const e=u**h,n=e*t;n<=c&&n+e>c&&(c-=n,i+=o[Number(t)])}return i}static shuffle(t){let e=[],n="";for(;e.length!==t.length;){const r=Math.floor(Math.random()*t.length);e.includes(r)||(n+=t[r],e.push(r))}return n}static extractCharset(t){let e="";for(let n=0;n<t.length;n++)e.includes(t[n])||(e+=t[n]);return e}}