class BaseN{static encrypt(t,e,n,l){const g=n.split(""),i=l.split(""),o=BigInt(g.length),r=BigInt(i.length);let s,B=0n,I="",f=[],h=0n;for(let e=0;e<t.length;e++)B+=o**BigInt(t.length-1-e)*BigInt(g.indexOf(t[e])),h+=o**BigInt(t.length-1-e)*BigInt(g.indexOf(t[e]));let c=0n;for(let t=BigInt(e.length-1);t>=0;t--){const n=g.indexOf(e[Number(t)]);B+=o**t*BigInt(n),c+=o**t*BigInt(n),f.push(n)}for(console.log(h+c),s=0n;r**s<=B&&r**(s+1n)<B;s++);console.log(s);let u="";for(;s>=0;s--)for(let t=0n;t<r;t++){const e=r**s,n=e*t;if(n<=B&&n+e>B){u+=Number(t)+".",console.log(`${r} ** ${s} * ${t}`),B-=n,I+=i[(Number(t)+f.reduce((t,e)=>t+e))%Number(r)];for(let t=0;t<f.length&&(f[t]+=1,f[t]>=o);t++)f[t]=0}}return console.log(u),I}static decrypt(t,e,n,l){const g=n.split(""),i=l.split(""),o=BigInt(g.length),r=BigInt(i.length);let s,B=0n,I="",f=[];for(let t=BigInt(e.length-1);t>=0;t--){const n=i.indexOf(e[Number(t)]);B-=r**t*BigInt(n),f.push(n)}let h=[];for(let e=0;e<t.length;e++){let n=BigInt(f.reduce((t,e)=>t+e)+g.indexOf(t[e]));for(let e=2;e<o;e++)n-=BigInt(g.indexOf(t[e]))*o-BigInt(f.reduce((t,e)=>t+e));h.push(n%o);for(let t=0;t<f.length&&(f[t]+=1,f[t]>=r);t++)f[t]=0}for(let t=0;t<h.length;t++)B+=o**BigInt(h.length-1-t)*BigInt(h[t]);for(s=0n;r**s<=B&&r**(s+1n)<=B;s++);for(console.log(s);s>=0;s--)for(let t=0n;t<r;t++){const e=r**s,n=e*t;n<=B&&n+e>B&&(B-=n,I+=i[Number(t)])}return I}static shuffle(t){let e=[],n="";for(;e.length!==t.length;){const l=Math.floor(Math.random()*t.length);e.includes(l)||(n+=t[l],e.push(l))}return n}static extractCharset(t){let e="";for(let n=0;n<t.length;n++)e.includes(t[n])||(e+=t[n]);return e}}